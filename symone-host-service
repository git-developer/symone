#!/bin/sh
set -eu

here="$(readlink -f "$(dirname "$0")")"
name="$(basename $0)"
COLLECTOR_HOST_COLLECTORS_PATH="${COLLECTOR_HOST_COLLECTORS_PATH:-${here}/collectors}"
COLLECTOR_HOST_RUNTIME_PATH="${COLLECTOR_HOST_RUNTIME_PATH:-/var/run/symone}"
COLLECTOR_HOST_DATA_PATH="${COLLECTOR_HOST_DATA_PATH:-${COLLECTOR_HOST_RUNTIME_PATH}/data}"
COLLECTOR_HOST_DATA_MODE="${COLLECTOR_HOST_DATA_MODE:-a=rwx}"
COLLECTOR_HOST_PIPE="${COLLECTOR_HOST_PIPE:-${COLLECTOR_HOST_RUNTIME_PATH}/host-monitor}"
COLLECTOR_HOST_PIPE_MODE="${COLLECTOR_HOST_PIPE_MODE:-a=rw}"
COLLECTOR_HOST_TIMEOUT="${COLLECTOR_HOST_TIMEOUT:-1}"
COLLECTOR_HOST_SYSTEMD_PATH="${COLLECTOR_HOST_SYSTEMD_PATH:-/etc/systemd/system/${name}.service}"

log() {
  echo >&2 "$@"
}

debug() {
  if [ "${DEBUG:-false}" = 'true' ]; then
    log "DEBUG: $@"
  fi
}

warn() {
  log "WARNING: $@"
}

cancel() {
  log "ERROR: $@"
  return 1
}

prepare() {
  trap shutdown EXIT INT QUIT TERM
  trap restart HUP
  if [ ! -p "${COLLECTOR_HOST_PIPE}" ]; then
    mkdir -p "$(dirname "${COLLECTOR_HOST_PIPE}")"
    mkfifo -m "${COLLECTOR_HOST_PIPE_MODE}" "${COLLECTOR_HOST_PIPE}"
  fi
  mkdir -p "${COLLECTOR_HOST_DATA_PATH}"
  chmod "${COLLECTOR_HOST_DATA_MODE}" "${COLLECTOR_HOST_DATA_PATH}"
}

collect() {
  id="${1}"
  command="${COLLECTOR_HOST_COLLECTORS_PATH}/${id}"
  target="${COLLECTOR_HOST_DATA_PATH}/${id}"

  debug "Running ${command}"
  if env -i ${DEBUG:+sh -x -c} "${command}" >>"${target}"; then
    debug "${command} finished successfully"
  else
    warn "${command} returned code $?"
  fi
}

status() {
  if [ -p "${COLLECTOR_HOST_PIPE}" ]; then
    log "${name} is monitoring ${COLLECTOR_HOST_PIPE}"
  else
    log "${name} is stopped"
    return 3
  fi
}

start() {
  if [ -p "${COLLECTOR_HOST_PIPE}" ]; then
    cancel "${name} is already running."
  fi

  prepare

  log "${name} starts monitoring ${COLLECTOR_HOST_PIPE}"
  while true; do
    debug "Listening for requests"
    if read request id <"${COLLECTOR_HOST_PIPE}"; then
      debug "Received request: ${request} ${id}"
      case "${request}" in
        collect) collect "${id}" ;;
        stop)    break   ;;
        *)       warn "Ignoring unsupported request '${request}'" ;;
      esac
    else
      log "${name} was interrupted by signal $? when monitoring ${COLLECTOR_HOST_PIPE}"
      break
    fi
  done
}

stop() {
  if status 2>/dev/null && ! echo stop | timeout "${COLLECTOR_HOST_TIMEOUT}" tee "${COLLECTOR_HOST_PIPE}" >/dev/null; then
    log "${name} did not respond within ${COLLECTOR_HOST_TIMEOUT}s and is assumed to be stopped."
    log "Forcing removal of orphan ${COLLECTOR_HOST_PIPE}."
    shutdown
  fi
}

restart() {
  stop
  sleep 1
  start
}

shutdown() {
  if [ -e "${COLLECTOR_HOST_PIPE}" ]; then
    log "${name} stops monitoring ${COLLECTOR_HOST_PIPE}"
    rm -f "${COLLECTOR_HOST_PIPE}"
  fi
  if [ -d "${COLLECTOR_HOST_DATA_PATH}" ]; then
    rm -r "${COLLECTOR_HOST_DATA_PATH}"
  fi
}

systemd_install() {
  target="${1:-${COLLECTOR_HOST_SYSTEMD_PATH}}"

  if [ -e "${target}" ]; then
    cancel "systemd service unit '${target}' already exists"
  fi
  me="$(readlink -f "$0")"
  service_unit="${here}/${name}.service"
  printf >"${service_unit}" '%s\n' \
    '[Unit]' 'Description=SYMONE host service' '' \
    '[Service]' "ExecStart='${me}' start" '' \
    '[Install]' 'WantedBy=multi-user.target'
  ln -s "${service_unit}" "${target}"
  systemctl enable "${name}"
  systemctl start "${name}"
}

systemd_uninstall() {
  target="${1:-${COLLECTOR_HOST_SYSTEMD_PATH}}"

  systemctl stop "${name}"
  systemctl disable "${name}"
  rm -i "${target}"
}

main() {
  if [ "$#" -eq 0 ]; then
    log "Usage: ${name} [start | stop | restart | status | systemd-install [target] | systemd-uninstall [target] ]"
    return 1
  fi

  command="$1"
  case "${command}" in
    start)             start   ;;
    stop)              stop    ;;
    status)            status  ;;
    restart)           restart ;;
    systemd-install)   systemd_install ;;
    systemd-uninstall) systemd_uninstall ;;
    *)                 warn "Ignoring unsupported command '${command}'" ;;
  esac
}

main "$@"
